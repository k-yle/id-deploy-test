name: Build and Deploy Staging Instance

on:
  push:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  build-deploy:
    if: github.repository == 'openstreetmap/id'
    runs-on: ubuntu-latest
    environment: workflows
    steps:
      - name: Checkout the main repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: '.nvmrc'
      # install and build development version of id-tagging-schema
      - name: Checkout the id-tagging-schema repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: openstreetmap/id-tagging-schema
          path: './id-tagging-schema'
      - name: NPM - Perform clean install
        run: npm clean-install
        working-directory: './id-tagging-schema'
      - name: NPM - Audit packages signatures
        run: npm audit signatures
      - name: NPM - Run translations
        run: npm run translations
        working-directory: './id-tagging-schema'
        env:
          transifex_password: ${{secrets.TX_TOKEN}}
        if: env.transifex_password != null
      - name: NPM - Run dist
        run: npm run dist
        working-directory: './id-tagging-schema'
      - name: id-tagging-schema - Create directories
        run: mkdir dist/id-tagging-schema && mv id-tagging-schema/dist dist/id-tagging-schema/dist
      # build iD using freshest version of presets and ELI
      - name: NPM - Clean installation
        run: npm clean-install
      - name: NPM - Install latest dependencies
        run: npm install editor-layer-index
      - name: NPM - Audit packages signatures
        run: npm audit signatures
      - name: Create directory dist/data
        run: mkdir dist/data
      - name: NPM - Build imagery
        run: npm run imagery
      - name: NPM - Build all
        run: npm run all
      - name: NPM - Build translations
        run: npm run translations
        env:
          transifex_password: ${{secrets.TX_TOKEN}}
        if: env.transifex_password != null
      - name: NPM - Build dist
        run: npm run dist
        env:
          ID_PRESETS_CDN_URL: './id-tagging-schema/'
      # deploy to netlify
      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{secrets.NETLIFY_AUTH_TOKEN}}
          NETLIFY_SITE_ID: ${{secrets.NETLIFY_SITE_ID}}
        run: ./node_modules/.bin/netlify deploy --no-build --prod --dir=dist
